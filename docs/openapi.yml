openapi: '3.0.2'
info:
  title: LibraRoom - Account
  version: '1.0'
servers:
  - url: http://localhost:8000
paths:
  /permissions:
    get:
      summary: "Get All Permission"
      tags:
        - "Permission"
      security:
        - bearerAuth: []
      responses:
        "200":
          $ref: "#/components/responses/permission_get_all_200"
        "401":
          $ref: "#/components/responses/default_401"
        "403":
          $ref: "#/components/responses/default_403"
        "404":
          $ref: "#/components/responses/default_404"
        "500":
          $ref: "#/components/responses/default_500"
    post:
      summary: "Create Permission"
      tags:
        - "Permission"
      security:
        - bearerAuth: []
      requestBody:
        $ref: "#/components/requestBodies/permission_create"
      responses:
        "201":
          $ref: "#/components/responses/permission_create_201"
        "400":
          $ref: "#/components/responses/permission_create_400"
        "401":
          $ref: "#/components/responses/default_401"
        "403":
          $ref: "#/components/responses/default_403"
        "404":
          $ref: "#/components/responses/default_404"
        "409":
          $ref: "#/components/responses/permission_create_409"
        "500":
          $ref: "#/components/responses/default_500"
  /permissions/{code}:
    patch:
      summary: "Update Permission"
      tags:
        - "Permission"
      security:
        - bearerAuth: []
      requestBody:
        $ref: "#/components/requestBodies/permission_update"
      parameters:
        - $ref: "#/components/parameters/permission_code"
      responses:
        "200":
          $ref: "#/components/responses/permission_update_200"
        "400":
          $ref: "#/components/responses/permission_update_400"
        "401":
          $ref: "#/components/responses/default_401"
        "403":
          $ref: "#/components/responses/default_403"
        "404":
          $ref: "#/components/responses/permission_update_404"
        "409":
          $ref: "#/components/responses/permission_update_409"
        "500":
          $ref: "#/components/responses/default_500"
    delete:
      summary: "Delete Permission"
      tags:
        - "Permission"
      security:
        - bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/permission_code"
      responses:
        "200":
          $ref: "#/components/responses/permission_delete_200"
        "401":
          $ref: "#/components/responses/default_401"
        "403":
          $ref: "#/components/responses/default_403"
        "404":
          $ref: "#/components/responses/permission_delete_404"
        "409":
          $ref: "#/components/responses/permission_delete_409"
        "500":
          $ref: "#/components/responses/default_500"
  
  /roles:
    get:
      summary: "Get All Role"
      tags:
        - "Role"
      security:
        - bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/role_all_page"
        - $ref: "#/components/parameters/role_all_pageSize"
        - $ref: "#/components/parameters/role_all_name"
      responses:
        "200":
          $ref: "#/components/responses/role_get_all_200"
        "401":
          $ref: "#/components/responses/default_401"
        "403":
          $ref: "#/components/responses/default_403"
        "404":
          $ref: "#/components/responses/default_404"
        "500":
          $ref: "#/components/responses/default_500"
    post:
      summary: "Create Role"
      tags:
        - "Role"
      security:
        - bearerAuth: []
      requestBody:
        $ref: "#/components/requestBodies/role_create"
      responses:
        "201":
          $ref: "#/components/responses/role_create_201"
        "400":
          $ref: "#/components/responses/role_create_400"
        "401":
          $ref: "#/components/responses/default_401"
        "403":
          $ref: "#/components/responses/default_403"
        "404":
          $ref: "#/components/responses/default_404"
        "409":
          $ref: "#/components/responses/role_create_409"
        "500":
          $ref: "#/components/responses/default_500"    
  /roles/{code}:
    get:
      summary: "Get Role by Code"
      tags:
        - "Role"
      security:
        - bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/role_code"
      responses:
        "200":
          $ref: "#/components/responses/role_get_code_200"
        "401":
          $ref: "#/components/responses/default_401"
        "403":
          $ref: "#/components/responses/default_403"
        "404":
          $ref: "#/components/responses/default_404"
        "500":
          $ref: "#/components/responses/default_500"
    patch:
      summary: "Update Role"
      tags:
        - "Role"
      security:
        - bearerAuth: []
      requestBody:
        $ref: "#/components/requestBodies/role_update"
      parameters:
        - $ref: "#/components/parameters/role_code"
      responses:
        "200":
          $ref: "#/components/responses/role_update_200"
        "400":
          $ref: "#/components/responses/role_update_400"
        "401":
          $ref: "#/components/responses/default_401"
        "403":
          $ref: "#/components/responses/default_403"
        "404":
          $ref: "#/components/responses/role_update_404"
        "409":
          $ref: "#/components/responses/role_update_409"
        "500":
          $ref: "#/components/responses/default_500"
    delete:
      summary: "Delete Role"      
      tags:
        - "Role"
      security:
        - bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/role_code"
      responses:
        "200":
          $ref: "#/components/responses/role_update_200"
        "400":
          $ref: "#/components/responses/role_update_400"
        "401":
          $ref: "#/components/responses/default_401"
        "403":
          $ref: "#/components/responses/default_403"
        "404":
          $ref: "#/components/responses/role_update_404"
        "409":
          $ref: "#/components/responses/role_update_409"
        "500":
          $ref: "#/components/responses/default_500"
  
  /signup:
    post:
      tags:
        - "User"
      responses:
        '200':
          description: OK
  /signin:
    post:
      tags:
        - "User"
      requestBody:
        $ref: "#/components/requestBodies/user_signin"
      responses:
        "201":
          $ref: "#/components/responses/user_signin_201"
        "400":
          $ref: "#/components/responses/user_signin_400"
  /verify:
    post:
      tags:
        - "User"
      responses:
        '200':
          description: OK
  /forgot-password:
    post:
      tags:
        - "User"
      responses:
        '200':
          description: OK
  
  /users:
    get:
      tags:
        - "User"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
  /users/{id}:
    get:
      tags:
        - "User"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
    patch:
      tags:
        - "User"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
    delete:
      tags:
        - "User"
      security:
        - bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/user_code"
      responses:
        "200":
          $ref: "#/components/responses/user_delete_200"
        "401":
          $ref: "#/components/responses/default_401"
        "403":
          $ref: "#/components/responses/default_403"
        "404":
          $ref: "#/components/responses/user_delete_404"
        "409":
          $ref: "#/components/responses/user_delete_409"
        "500":
          $ref: "#/components/responses/default_500"

components:
  schemas:
    permission:
      type: object
      properties:
        code:
          type: string
        name:
          type: string

    role:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        permissions:
          type: array
          items:
            $ref: "#/components/schemas/permission"
    
    user:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        avatar:
          type: string
          format: binary
        token:
          type: string
        role_default:
          $ref: "#/components/schemas/role"
        roles:
          type: array
          items:
            $ref: "#/components/schemas/role"
        permissions:
          type: array
          items:
            $ref: "#/components/schemas/permission"

    default_response:
      type: object
      properties:
        message:
          type: string
        data:
          oneOf:
            - type: object
              oneOf:
                - $ref: "#/components/schemas/permission"
                - $ref: "#/components/schemas/role"
                - $ref: "#/components/schemas/user"
            - type: array
              items:
                oneOf:
                  - $ref: "#/components/schemas/permission"
                  - $ref: "#/components/schemas/role"
                  - $ref: "#/components/schemas/user"
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    permission_code:
      in: path
      name: code
      required: true
      schema:
        type: string
    role_code:
      in: path
      name: code
      required: true
      schema:
        type: string
    role_all_page:
      in: query
      name: page
      required: false
      schema:
          type: integer
          example: 1
    role_all_pageSize:
      in: query
      name: pagesize
      required: false
      schema:
          type: integer
          example: 1
    role_all_name:
      in: query
      name: name_role
      required: true
      schema:
          type: string
          example: 'SuperUser'
    user_code:
      in: path
      name: id
      required: true
      schema:
        type: string

  requestBodies:
    permission_create:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/permission"
          example:
            code: "user.delete"
            name: "user delete"

    permission_update:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/permission"
          example:
            name: "user delete"

    role_create:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/role"
          example:
            code: "superUser.create"
            name: "superUser create"
  
    role_update:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/role"
          example:
            name: "superUser create"
    
    user_signin:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/user"
          example:
            email: "admin@gmail.com"
            password: "admin123"

  responses:
    default_401:
      description: "unauthorized"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/default_response"
          example:
            message: "unauthorized"
    default_403:
      description: "forbidden"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/default_response"
          example:
            message: "forbidden"
    default_404:
      description: "not found"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/default_response"
          example:
            message: "not found"
    default_500:
      description: "internal server error"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/default_response"
          example:
            message: "internal server error"
    
    permission_get_all_200:
      description: "success"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/default_response"
          example:
            message: "get all permission success"
            data:
              - code: "user.get-all"
                name: "user get all"
              - code: "user.delete"
                name: "user delete"
    permission_create_201:
      description: "success"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/default_response"
          example:
            message: "create permission success"
    permission_create_400:
      description: "bad request"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/default_response"
          example:
            message: "please fill input correctly"
    permission_create_409:
      description: "bad request"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/default_response"
          example:
            message: "code already exist"
    
    permission_update_200:
      description: "success"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/default_response"
          example:
            message: "update permission success"
    permission_update_400:
      description: "bad request"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/default_response"
          example:
            message: "please fill input correctly"
    permission_update_404:
      description: "not found"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/default_response"
          example:
            message: "permission not found"
    permission_update_409:
      description: "bad request"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/default_response"
          example:
            message: "code already exist"

    permission_delete_200:
      description: "success"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/default_response"
          example:
            message: "delete permission success"
    permission_delete_404:
      description: "not found"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/default_response"
          example:
            message: "permission not found"
    permission_delete_409:
      description: "conflict"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/default_response"
          example:
            message: "resource in use"

    role_create_201:
      description: "success"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/default_response"
          example:
            message: "create role success"
    role_create_400:
      description: "bad request"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/default_response"
          example:
            message: "please fill input correctly"
    role_create_409:
      description: "bad request"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/default_response"
          example:
            message: "code already exist"
    role_update_200:
      description: "success"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/default_response"
          example:
            message: "delete role success"
    role_update_400:
      description: "bad request"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/default_response"
          example:
            message: "please fill input correctly"
    role_update_404:
      description: "not found"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/default_response"
          example:
            message: "role not found"
    role_update_409:
      description: "bad request"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/default_response"
          example:
            message: "code already exist"
    role_delete_200:
      description: "success"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/default_response"
          example:
            message: "delete role success"
    role_delete_404:
      description: "not found"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/default_response"
          example:
            message: "role not found"
    role_delete_409:
      description: "conflict"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/default_response"
          example:
            message: "resource in use"
    role_get_all_200:
      description: "success"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/default_response"
          example:
            message: "get all role success"
            data:
              - code: "superUser.create"
                name: "superUser create"
              - code: "user.delete"
                name: "user delete"
    role_get_code_200:
      description: "success"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/default_response"
          example:
            message: "get role success"
            data:
              role:
                - code: "superUser.create"
                  name: "superUser create"
                  permissions:
                  - code: "superUser.get-all"
                    name: "superUser get all"
                  - code: "user.write-all"
                    name: "user write all"
    user_signin_201:
      description: "success"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/default_response"
          example:
            message: "login success"
            data:
              user:
                - id: '1'
                  name: 'admin'
                  email: 'admin@gmail.com'
                  token: 'eyJhbGciOiJIUzI1NiIsInR5'
                  role_default:
                      code: "superUser.create"
                      name: "superUser create"
                      permissions:
                      - code: "superUser.get-all"
                        name: "superUser get all"
                  roles:
                      code: "superUser.create"
                      name: "superUser create"
                      permissions:
                      - code: "superUser.get-all"
                        name: "superUser get all"
                  permission:
                        code: "superUser.get-all"
                        name: "superUser get all"
    user_signin_400:
      description: "bad request"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/default_response"
          example:
            message: "please fill input correctly"
    user_delete_200:
      description: "success"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/default_response"
          example:
            message: "delete user success"
    user_delete_404:
      description: "not found"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/default_response"
          example:
            message: "user not found"
    user_delete_409:
      description: "conflict"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/default_response"
          example:
            message: "resource in use"

